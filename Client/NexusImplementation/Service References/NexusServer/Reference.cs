//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexusImplementation.NexusServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NexusServer.IConnection")]
    public interface IConnection {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Connect", ReplyAction="http://tempuri.org/IConnection/ConnectResponse")]
        bool Connect(System.Guid userId, System.Guid appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Connect", ReplyAction="http://tempuri.org/IConnection/ConnectResponse")]
        System.Threading.Tasks.Task<bool> ConnectAsync(System.Guid userId, System.Guid appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Disconnect", ReplyAction="http://tempuri.org/IConnection/DisconnectResponse")]
        bool Disconnect(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Disconnect", ReplyAction="http://tempuri.org/IConnection/DisconnectResponse")]
        System.Threading.Tasks.Task<bool> DisconnectAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Ping", ReplyAction="http://tempuri.org/IConnection/PingResponse")]
        string Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConnection/Ping", ReplyAction="http://tempuri.org/IConnection/PingResponse")]
        System.Threading.Tasks.Task<string> PingAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConnectionChannel : NexusImplementation.NexusServer.IConnection, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectionClient : System.ServiceModel.ClientBase<NexusImplementation.NexusServer.IConnection>, NexusImplementation.NexusServer.IConnection {
        
        public ConnectionClient() {
        }
        
        public ConnectionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConnectionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConnectionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Connect(System.Guid userId, System.Guid appId) {
            return base.Channel.Connect(userId, appId);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectAsync(System.Guid userId, System.Guid appId) {
            return base.Channel.ConnectAsync(userId, appId);
        }
        
        public bool Disconnect(string userId) {
            return base.Channel.Disconnect(userId);
        }
        
        public System.Threading.Tasks.Task<bool> DisconnectAsync(string userId) {
            return base.Channel.DisconnectAsync(userId);
        }
        
        public string Ping() {
            return base.Channel.Ping();
        }
        
        public System.Threading.Tasks.Task<string> PingAsync() {
            return base.Channel.PingAsync();
        }
    }
}
